doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='#{req.baseUrl}/css/bootstrap.min.css', media='screen')
    link(rel='stylesheet', href='#{req.baseUrl}/css/datepicker3.css', media='screen')
    link(rel='stylesheet', href='#{req.baseUrl}/css/font-awesome.min.css', media='screen')
    link(rel='stylesheet', href='#{req.baseUrl}/css/summernote.css', media='screen')
    link(rel='stylesheet', href='#{req.baseUrl}/css/codemirror.css', media='screen')
    link(rel='stylesheet', href='#{req.baseUrl}/css/sweet-alert.css')
    link(rel='stylesheet', href='#{req.baseUrl}/css/select2.css')
    link(rel='stylesheet', href='#{req.baseUrl}/css/select2-bootstrap.css')
    style.
      .inline {
        display: inline
      }
    script queue = []
    title Backbeam
  body
    .navbar.navbar-inverse.navbar-fixed-top
      .container
        .navbar-header
          a.navbar-brand(href=req.baseUrl) Backbeam
          button.navbar-toggle(type='button', data-toggle='collapse', data-target='#navbar-main')
            span.icon-bar
            span.icon-bar
            span.icon-bar
        #navbar-main.navbar-collapse.collapse
          ul.nav.navbar-nav
            li.dropdown
              a#menu-entities.dropdown-toggle(data-toggle='dropdown', href='#') Entities 
                span.caret
              ul.dropdown-menu(aria-labelledby='menu-entities')
                - var entities = core.model.entities.sort(function(a, b) { return a.id < b.id ? -1 : 1 })
                each entity in entities
                  li
                    a(href='#{req.baseUrl}/entity/#{entity.id}')= _s.humanize(entity.id)
                li.divider
                li
                  a(data-target='#new-entity',
                    data-toggle='modal') New entity
            li.dropdown
              a#menu-view.dropdown-toggle(data-toggle='dropdown', href='#') View
                span.caret
              ul.dropdown-menu(aria-labelledby='menu-view')
                li
                  a(href='#{req.baseUrl}/email-templates') Email templates
                li
                  a(href='#{req.baseUrl}/push') Push notifications
                li
                  a(href='#{req.baseUrl}/logs') Logs
                li
                  a(href='#{req.baseUrl}/stats') Statistics
            li
              a(href='#{req.baseUrl}/web') Web development
            li
              a#menu-configuration.dropdown-toggle(data-toggle='dropdown', href='#') Configuration
                span.caret
              ul.dropdown-menu(aria-labelledby='menu-configuration')
                li
                  a(href='#{req.baseUrl}/configuration/view') View configuration
                li
                  a(href='#{req.baseUrl}/configuration/migrate') Schema changes
            //-     li
            //-       a(href='#{req.baseUrl}/configuration/general') General settings
            //-     li
            //-       a(href='#{req.baseUrl}/configuration/authentication') Users authentication
            //-     li
            //-       a(href='#{req.baseUrl}/configuration/push') Push notifications
            //-     li
            //-       a(href='#{req.baseUrl}/configuration/email') Email settings
          //- ul.nav.navbar-nav.navbar-right
          //-   li
          //-     a(href='#') Log out

    .container(style='margin-top: 60px')
      block content

    #object-chooser.modal
      .modal-dialog.modal-lg
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal')
              span(aria-hidden='true') ×
              span.sr-only Close
            h4.modal-title
          .modal-body
            p Loading…

    #location-chooser.modal
      .modal-dialog.modal-lg
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal')
              span(aria-hidden='true') ×
              span.sr-only Close
            h4.modal-title Choose a location
          .modal-body
            .row
              .col-md-5
                form.form-search
                  .form-group
                    .input-group
                      input.form-control.input-sm(type='text', placeholder='Write an address here')
                      span.input-group-btn
                        button.btn.btn-default.btn-sm(type='submit')
                          span.glyphicon.glyphicon-search
                ul
              .col-md-7
                #location-chooser-map(style='height: 400px')
          .modal-footer
            a.btn.btn-default(href=nolink, data-dismiss='modal') Cancel

    #new-entity.modal(tabindex='-1', role='dialog', aria-labelledby='new-entity-label', aria-hidden='true')
      form(role='form', method='post', action='#{req.baseUrl}/entity/edit')
        input(type='hidden', name='oldIdentifier')
        .modal-dialog
          .modal-content
            .modal-header
              button.close(type='button', data-dismiss='modal')
                span(aria-hidden='true') ×
                span.sr-only Close
              h4#new-entity-label.modal-title New entity
            .modal-body
              .form-group
                label.control-label(for='identifier') Identifier:
                input.form-control(type='text', name='identifier', placeholder='entity-identifier')
            .modal-footer
              button.btn.btn-primary(type='submit') Create entity


    script(src='#{req.baseUrl}/js/jquery-1.11.1.min.js')
    script(src='#{req.baseUrl}/js/bootstrap.min.js')
    script(src='#{req.baseUrl}/js/bootstrap-datepicker.js')
    script(src='#{req.baseUrl}/js/summernote.min.js')
    script(src='#{req.baseUrl}/js/codemirror.js')
    script(src='#{req.baseUrl}/js/codemirror-modes/javascript/javascript.js')
    script(src='#{req.baseUrl}/js/backbeam.js')
    script(src='#{req.baseUrl}/js/sweet-alert.min.js')
    script(src='#{req.baseUrl}/js/select2.min.js')
    script(src='#{req.baseUrl}/js/mousetrap.min.js')
    script(src='https://maps.googleapis.com/maps/api/js')
    script backbeam.baseUrl = '#{req.baseUrl}'
    block scripts

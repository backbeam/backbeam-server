style.
  .playground-btn-icon {
    line-height: 28px
  }

mixin playground-entry(title, type)
  .row
    .col-xs-11
      label= title
    .col-xs-1
      a(href=nolink).glyphicon.glyphicon-plus.add-entry.playground-btn-icon(data-entry-type=type)
  .form-group.row

#playground.row
  .col-md-5
    br
    .panel.panel-default
      .panel-heading Request
      .panel-body
        form(role='form', action='#{req.baseUrl}/web/playground', method='post')
          input#playground-base(type='hidden', name='base')
          .form-group
            label(for='method') HTTP method
            select.form-control.input-sm(name='method')
              option(value='get') GET
              option(value='post') POST
              option(value='put') PUT
              option(value='delete') DELETE
          .form-group
            label(for='path', name='path') Path
            input.form-control.input-sm(type='text', name='path', placeholder='/path', value='/')
          .form-group.playground-group
            +playground-entry('Request headers', 'header')
          .form-group.playground-group
            +playground-entry('Query string', 'query')
          .form-group.playground-group
            +playground-entry('Form params', 'form')
          //- .form-group
          //-   label Logged user
          //-   .input-group
          //-     input.form-control.input-sm(type='text')
          //-     span.input-group-btn
          //-       button.btn.btn-primary.btn-sm(type='button') Choose
          //-       button.btn.btn-danger.btn-sm(type='button') No user
          button.btn.btn-primary.btn-sm(type='submit') Submit request
  .col-md-7
    br
    .panel.panel-default
      .panel-heading Response
      .panel-body
        .row
          .col-xs-3
            p.text-right HTTP Status code:
          .col-xs-9
            strong#playground-response-status
        .row
          .col-xs-3
            p.text-right Response date:
          .col-xs-9
            strong#playground-response-time
        h3 Response body
        textarea.code-editor(rows='5', placeholder='Here you will see the http response')
        h3 Response headers
        table#playground-response-headers.table.table-condensed.table-striped
          tbody

  script.
    $('#playground form [name=base]').val(window.location.href)

    $('#playground').on('click', '.add-entry', function(e) {
      e.preventDefault()
      var type = $(this).attr('data-entry-type')
      var group = $(this).closest('.playground-group')
      var inputKey = '<div class="col-xs-5"><input placeholder="Key" name="'+type+'-key" class="form-control input-sm"></div>'
      var inputValue = '<div class="col-xs-6"><input placeholder="Value" name="'+type+'-value" class="form-control input-sm"></div>'
      var removeBtn = '<div class="col-xs-1"><a href="javascript:void(0)" class="glyphicon glyphicon-remove playground-btn-icon remove-entry"></a></div>'
      var gr = $(['<div class="form-group row">', inputKey, inputValue, removeBtn, '</div>'].join(''))
      group.append(gr)
      if (e.originalEvent) {
        // generated by the user
        gr.find('input').get(0).focus()
      }
    })

    $('#playground').on('click', '.remove-entry', function(e) {
      e.preventDefault()
      $(this).closest('.row').remove()
    })

    $('#playground form').on('submit', function(e) {
      e.preventDefault()
      var form = $(this)
      $.ajax({
        url: form.attr('action'),
        type: form.attr('method'),
        data: form.serialize(),
        dataType: 'json',
        success: function(data) {
          $('#playground-response-status').text(data.status)
          $('#playground-response-time').text(data.time)
          var tbody = $('#playground-response-headers tbody')
          tbody.empty()
          var headers = data.headers
          for (var key in headers) {
            if (headers.hasOwnProperty(key)) {
              var value = headers[key]
              var tdKey = $('<td>').text(key)
              var tdVal = $('<td>').text(value)
              var tr = $('<tr>').append(tdKey).append(tdVal)
              tbody.append(tr)
            }
          }
          $('#playground .code-editor').data('CodeMirrorInstance').setValue(data.body)
          // TODO: mode, time
        },
      })
    })


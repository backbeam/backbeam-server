extends layout

block content
  .row
    .col-lg-12
      h1 Edit #{_s.humanize(req.params.entity)}
      hr
      - var entity = core.model.findEntity(req.params.entity)

      form#object-edit.form-horizontal(role='form', action='#{req.baseUrl}/object/#{req.params.entity}/#{req.params.id}', method='post')
        each field in entity.fields
          - var value = object.get(field.id)
          case field.type
            when 'text'
              - value = field.id === 'password' && entity.id === 'user' ? void 0 : value
              .form-group
                label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                .col-sm-10
                  input.form-control(
                    type='text',
                    placeholder=_s.humanize(field.id),
                    value=value,
                    name='set-#{field.id}'
                  )
            when 'textarea'
              .form-group
                label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                .col-sm-10
                  textarea.form-control(
                    placeholder=_s.humanize(field.id),
                    value=value,
                    name='set-#{field.id}',
                    rows=5
                  )
            when 'richtextarea'
              .form-group
                label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                .col-sm-10
                  input(type='hidden', name='set-#{field.id}')
                  //- TODO: sanitize output
                  .summernote!= value
            when 'json'
              .form-group
                label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                .col-sm-10
                  textarea.form-control.code-editor(
                    placeholder=_s.humanize(field.id),
                    name='set-#{field.id}',
                    rows=5,
                    data-mode='javascript'
                  )= value ? JSON.stringify(value, null, 2) : ''
            when 'date'
              .form-group
                label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                input(type='hidden' value='ymd' name='_format-#{field.id}')
                input(type='hidden' value='UTC' name='_timezone-#{field.id}')
                .col-sm-5
                  .input-group
                    input.form-control.date-picker(
                      type='text',
                      placeholder=_s.humanize(field.id),
                      value=dateutils.formatDate(value, 'ymd', 'UTC'),
                      name='_date-#{field.id}'
                    )
                    span.input-group-addon
                      span.glyphicon.glyphicon-calendar
                .col-sm-5
                  .input-group
                    input.form-control(
                      type='text',
                      placeholder=_s.humanize(field.id),
                      value=dateutils.formatTime(value, 'UTC'),
                      name='_time-#{field.id}'
                    )
                    span.input-group-addon
                      span.glyphicon.glyphicon-time
            when 'day'
              .form-group
                label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                input(type='hidden' value='ymd' name='_format-#{field.id}')
                .col-sm-10
                  .input-group
                    input.form-control.date-picker(
                      type='text',
                      placeholder=_s.humanize(field.id),
                      value=dateutils.formatDay(value, 'ymd'),
                      name='_day-#{field.id}'
                    )
                    span.input-group-addon
                      span.glyphicon.glyphicon-calendar
            when 'number'
              .form-group
                label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                .col-sm-10
                  input.form-control(
                    type='number',
                    placeholder=_s.humanize(field.id),
                    value=value,
                    name='set-#{field.id}'
                  )
            when 'location'
              .form-group
                label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                .col-sm-10
                  .input-group
                    input.form-control(type='text')
                    span.input-group-btn
                      button.btn.btn-info(type='button') Search coordinates
            when 'select'
              .form-group
                label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                .col-sm-10
                  select.form-control(name='set-#{field.id}')
                    option(value='') None
                    each option in field.options
                      option(value=option, selected=(value === option ? 'selected' : undefined))= option
            when 'boolean'
              .form-group
                .col-sm-offset-2.col-sm-10
                  label
                    input(type='checkbox', name='set-#{field.id}', checked=(value ? 'checked' : undefined))
                    |  #{_s.humanize(field.id)}
            when 'reference'
              if field.relationship.indexOf('one-') === 0
                - var reference = objects[value]
                .form-group
                  label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                  .col-sm-10
                    .input-group
                      input(type='hidden', name='set-#{field.id}', value=(reference && reference._id))
                      input.form-control(type='text', value=(reference && reference.description()), readonly)
                      span.input-group-btn
                        button.btn.btn-primary.choose-object(type='button',
                          data-entity=field.entity, data-title='Choose an object') Choose
              else
                .form-group
                  label.col-sm-2.control-label(for=field.id)= _s.humanize(field.id)
                  .col-sm-10
                    .input-group
                      input.form-control(type='text', readonly)
                      span.input-group-btn
                        button.btn.btn-primary.browse-relationship(type='button',
                          data-entity=field.entity, data-field=field.id, data-inverse=field.inverse,
                          data-title='Browse relationship') Browse
                        button.btn.btn-info.add-object(type='button',
                          data-entity=field.entity, data-field=field.id,
                          data-title='Choose an object') Add
                .form-group(id='#{field.id}-objects-add', style='display:none')
                  .col-sm-10.col-sm-offset-2
                    p Objects to add
                    .row.relationship-objects
                      //- .col-md-3.col-sm-4
                      //-   .input-group(style='margin-bottom: 5px')
                      //-     input.form-control.input-sm(type='text', readonly)
                      //-     span.input-group-btn
                      //-       button.btn.btn-default.btn-sm(type='button', title='Do not remove'): span.glyphicon.glyphicon-remove
                .form-group(id='#{field.id}-objects-rem', style='display:none')
                  .col-sm-10.col-sm-offset-2
                    p Objects to remove
                    .row.relationship-objects
                      //- .col-md-3.col-sm-4
                      //-   .input-group(style='margin-bottom: 5px')
                      //-     input.form-control.input-sm(type='text', readonly)
                      //-     span.input-group-btn
                      //-       button.btn.btn-default.btn-sm(type='button', title='Do not remove'): span.glyphicon.glyphicon-remove
        .form-group
          .col-sm-offset-2.col-sm-10
            button.btn.btn-primary(type='submit') Save changes

block scripts
  script.
    var form = $('#object-edit')
    form.on('submit', function(e) {
      $('.summernote', form).each(function() {
        var input = $(this).prev()
        input.val($(this).code())
      })
    })
    form.on('click', '.choose-object', function(e) {
      e.preventDefault()
      var btn = $(this)
      var entity = btn.attr('data-entity')
      var title = btn.attr('data-title')
      var params = 'action='+btn.text()
      backbeam.objectChooser.show(entity, params, title, function(id, description) {
        var inputGroup = btn.closest('.input-group')
        inputGroup.find('input[type=hidden]').val(id)
        inputGroup.find('input[type=text]').val(description)
      })
    })
    form.on('click', '.browse-relationship', function(e) {
      e.preventDefault()
      var btn = $(this)
      var entity = btn.attr('data-entity')
      var title = btn.attr('data-title')
      var field = btn.attr('data-field')
      var inverse = btn.attr('data-inverse')
      var params = 'action=Remove'
      params += '&where='+inverse+'&value=#{req.params.id}'
      backbeam.objectChooser.show(entity, params, title, function(id, description) {
        var section = $('#'+field+'-objects-rem')
        var html = [
          '<div class="col-md-3 col-sm-4 group">',
          '<div style="margin-bottom: 5px" class="input-group">',
          '<input type="hidden" name="rem-'+field+'">',
          '<input type="text" readonly="" class="form-control input-sm">',
          '<span class="input-group-btn">',
          '<button type="button" title="Do not remove" class="btn btn-default btn-sm">',
          '<span class="glyphicon glyphicon-remove cancel-action">',
          '</span></button></span></div></div>',
        ].join(' ')
        var div = $(html)
        div.find('input[type=hidden]').val(id)
        div.find('input[type=text]').val(description)
        section.find('.relationship-objects').append(div)
        section.show()
      })
    })
    form.on('click', '.add-object', function(e) {
      e.preventDefault()
      var btn = $(this)
      var entity = btn.attr('data-entity')
      var title = btn.attr('data-title')
      var field = btn.attr('data-field')
      var params = 'action='+btn.text()
      backbeam.objectChooser.show(entity, params, title, function(id, description) {
        var section = $('#'+field+'-objects-add')
        var html = [
          '<div class="col-md-3 col-sm-4 group">',
          '<div style="margin-bottom: 5px" class="input-group">',
          '<input type="hidden" name="add-'+field+'">',
          '<input type="text" readonly="" class="form-control input-sm">',
          '<span class="input-group-btn">',
          '<button type="button" title="Do not add" class="btn btn-default btn-sm">',
          '<span class="glyphicon glyphicon-remove cancel-action">',
          '</span></button></span></div></div>',
        ].join(' ')
        var div = $(html)
        div.find('input[type=hidden]').val(id)
        div.find('input[type=text]').val(description)
        section.find('.relationship-objects').append(div)
        section.show()
      })
    })
    form.on('click', '.relationship-objects .cancel-action', function(e) {
      e.preventDefault()
      var div = $(this).closest('.group')
      var objects = div.closest('.relationship-objects')
      div.remove()
      var size = objects.find('div').size()
      if (size === 0) {
        objects.closest('.form-group').hide()
      }
    })

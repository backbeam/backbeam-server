extends layout

block content
  .row
    .col-lg-12
      div(role='tabpanel')
        ul.nav.nav-tabs#editor-tabs(role='tablist')
          li.dropdown(role='presentation')
            a#options.dropdown-toggle(href='#', data-toggle='dropdown', aria-controls='options-contents', aria-expanded='false')
              | Options 
              span.caret
            ul#options-contents.dropdown-menu(role='menu', aria-labelledby='options')
              li
                a(data-target='#open-file', tabindex='-1', role='tab', data-toggle='modal', aria-controls='dropdown1') Open… 
                  kbd cmd+shift+o
              li.divider(role='presentation')
              li
                a(data-target='#new-view',
                  data-toggle='modal',
                  tabindex='-1',
                  role='tab',
                  aria-controls='dropdown1') New view…
              li
                a(data-target='#new-controller',
                  data-toggle='modal',
                  tabindex='-1',
                  role='tab',
                  aria-controls='dropdown1') New controller…
              li
                a(data-target='#new-lib',
                  data-toggle='modal',
                  tabindex='-1',
                  role='tab',
                  aria-controls='dropdown1') New lib…
              li
                a(data-target='#new-asset',
                  data-toggle='modal',
                  tabindex='-1',
                  role='tab',
                  aria-controls='dropdown1') New asset…
              li.divider(role='presentation')
              li
                a#close-all(href=nolink, tabindex='-1', role='tab', aria-controls='dropdown2') Close all
          li#editor-latest-tab

      #editors

  #open-file.modal(tabindex='-1', role='dialog', aria-labelledby='open-file-label', aria-hidden='true')
    .modal-dialog
      .modal-content
        input#quick-search(style='width:100%')

  #new-view.modal(tabindex='-1', role='dialog', aria-labelledby='new-view-label', aria-hidden='true')
    form(role='form', method='post', action='#{req.baseUrl}/web/view')
      input(type='hidden', name='source', value='')
      .modal-dialog
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal')
              span(aria-hidden='true') ×
              span.sr-only Close
            h4#new-view-label.modal-title New view
          .modal-body
            .form-group
              label.control-label(for='filename') File name:
              input.form-control(type='text', name='filename', placeholder='index.html')
          .modal-footer
            button.btn.btn-primary(type='submit') Create view

  #new-controller.modal(tabindex='-1', role='dialog', aria-labelledby='new-controller-label', aria-hidden='true')
    form(role='form', method='post', action='#{req.baseUrl}/web/controller')
      input(type='hidden', name='source', value='')
      .modal-dialog
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal')
              span(aria-hidden='true') ×
              span.sr-only Close
            h4#new-controller-label.modal-title New controller
          .modal-body
            .form-group
              label.control-label(for='method') HTTP method:
              - var methods = ['GET', 'POST', 'PUT', 'DELETE']
              select(name='method').form-control
                each method in methods
                  option(value=method)= method
            .form-group
              label.control-label(for='path') Path:
              input.form-control(type='text', name='path', placeholder='/path')
            .form-group
              label.control-label(for='filename') File name:
              input.form-control(type='text', name='filename', placeholder='controller.js')
          .modal-footer
            button.btn.btn-primary(type='submit') Create controller

  #new-lib.modal(tabindex='-1', role='dialog', aria-labelledby='new-lib-label', aria-hidden='true')
    form(role='form', method='post', action='#{req.baseUrl}/web/lib')
      input(type='hidden', name='source', value='')
      .modal-dialog
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal')
              span(aria-hidden='true') ×
              span.sr-only Close
            h4#new-lib-label.modal-title New lib
          .modal-body
            .form-group
              label.control-label(for='filename') File name:
              input.form-control(type='text', name='filename', placeholder='utils.js')
          .modal-footer
            button.btn.btn-primary(type='submit') Create lib

  #new-asset.modal(tabindex='-1', role='dialog', aria-labelledby='new-asset-label', aria-hidden='true')
    form(role='form', method='post', action='#{req.baseUrl}/web/asset')
      input(type='hidden', name='source', value='')
      .modal-dialog
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal')
              span(aria-hidden='true') ×
              span.sr-only Close
            h4#new-asset-label.modal-title New asset
          .modal-body
            .form-group
              label.control-label(for='filename') File name:
              input.form-control(type='text', name='filename', placeholder='/css/style.css')
          .modal-footer
            button.btn.btn-primary(type='submit') Create asset

block scripts
  script.
    backbeam.baseUrl = '#{req.baseUrl}'
    var tabManager = backbeam.configureWebDevelopment({})
    $('#open-file').on('shown.bs.modal', function(e) {
      $('#quick-search').select2('open')
    })
    $('#close-all').on('click', function(e) {
      // TODO: prompt
      tabManager.closeAll()
    })
    $('#quick-search').select2({
      placeholder: 'Start writing the name of any view, controller or lib',
      query: function(q) {
        var query = q.term
        var quicksearch = backbeam.quicksearch || []

        function matches(search) {
          var str = search.toLowerCase()
          var n = 0
          for (var i=0; i<query.length; i++) {
            n = str.indexOf(query.charAt(i), n)
            if (n === -1) return false
          }
          return true
        }

        var data = []

        if (query) {
          quicksearch.forEach(function(item) {
            var text = item.text
            var search = item.search
            if (matches(search)) {
              data.push({
                id: item.id,
                text: text,
              })
            }
          })
        }

        q.callback({results: data})
      }
    }).on('change', function(e) {
      var url = e.val
      var name = backbeam.quicksearchNames[e.val]
      tabManager.addTab({
        url: backbeam.baseUrl+url,
        name: name,
      })
      $('#open-file').modal('hide')
      $('#quick-search').select2('val', '')
    }).on('select2-close', function(e) {
      $('#open-file').modal('hide')
      $('.navbar-brand').focus() // needed in safari to make the shortcut work next time
    })

    Mousetrap.stopCallback = function(e, element, combo) {
      return false
    }

    Mousetrap.bind(['mod+shift+o', 'mod+o'], function(e) {
      e.preventDefault()
      $('#open-file').modal('show')
    })

    $('#new-controller form').on('submit', function(e) {
      e.preventDefault()
      var form = $(this)
      $.ajax({
        url: form.attr('action'),
        type: form.attr('method'),
        data: form.serialize(),
        dataType: 'json',
        success: function(data) {
          var name = form.find('[name=method]').val()+' '+form.find('[name=path]').val()
          var filename = form.find('[name=filename]').val()
          var url = backbeam.baseUrl+'/web/controller/'+filename
          tabManager.addTab({
            url: url,
            name: name,
          })
          $('#new-controller').modal('hide')
          tabManager.refreshOverview()
        },
      })
    })

    $('#new-lib form').on('submit', function(e) {
      e.preventDefault()
      var form = $(this)
      $.ajax({
        url: form.attr('action'),
        type: form.attr('method'),
        data: form.serialize(),
        dataType: 'json',
        success: function(data) {
          var filename = form.find('[name=filename]').val()
          var url = backbeam.baseUrl+'/web/lib/'+filename
          tabManager.addTab({
            url: url,
            name: filename,
          })
          $('#new-lib').modal('hide')
          tabManager.refreshOverview()
        },
      })
    })

    $('#new-view form').on('submit', function(e) {
      e.preventDefault()
      var form = $(this)
      $.ajax({
        url: form.attr('action'),
        type: form.attr('method'),
        data: form.serialize(),
        dataType: 'json',
        success: function(data) {
          var filename = form.find('[name=filename]').val()
          var url = backbeam.baseUrl+'/web/view/'+filename
          tabManager.addTab({
            url: url,
            name: filename,
          })
          $('#new-view').modal('hide')
          tabManager.refreshOverview()
        },
      })
    })

